version: "3.8"

services:
  lockaas:
    container_name: lockaas
    extends:
      file: ./docker-compose-common.yml
      service: micro
    image: fluffycore.lockaas:latest
    ports:
      - "50051:50051"
      - "50052:50052"
      - "50053:50053"
      - "9044:9044"
    environment:
      APPLICATION_NAME: "lockaas"
      APPLICATION_ENVIRONMENT: "DOCKER"
      LOG_LEVEL": "debug"
      PRETTY_LOG: "true"
      PORT: "50051"
      GRPC_GATEWAY_ENABLED: "true"
      REST_PORT: "50052"
      oauth2Port: "50053"
      customString: "In Flames"
      someSecret: "1234567890"
      ENABLE_GRPC_SERVER_REFLECTION: "true"
      jwtValidators__issuers: "http://mock-oauth2:9802"
      jwtValidators__jwksUrls: "http://mock-oauth2:9802/.well-known/jwks"
 
    volumes:
      - ./configs/core.json:/config/core.json
    depends_on:
      mongodb:
        condition: service_healthy      
    entrypoint: ["/app/server", "serve"]
  
  mock-oauth2:
    extends:
      file: ./docker-compose-common.yml
      service: micro
    container_name: mock-oauth2
    image: ghstahl/fluffycore.starterkit:latest
    ports:
      - "9802:50053"
    environment:
      APPLICATION_NAME: "mydevoauthserver"
      APPLICATION_ENVIRONMENT: "DOCKER"
      LOG_LEVEL": "debug"
      PRETTY_LOG: "true"
      OAUTH2_PORT: "50053"
      configFiles__clientPath: "/config/clients.json"
    volumes:
      - ./configs/mockoauth2/clients.json:/config/clients.json
    entrypoint: ["/app/server", "serve"]

  mongodb:
    extends:
      file: ./docker-compose-common.yml
      service: micro
    # TODO: due to https://github.com/bitnami/charts/issues/3635 we use this
    # image: "bitnami/mongodb:4.4.13-debian-10-r31"
    image: "ghcr.io/zcube/bitnami-compat/mongodb:6.0"
    container_name: "mongodb"
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/bitnami/mongodb
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: [ "CMD-SHELL", "mongosh --port 27017 --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'" ]
      start_period: 20s
      interval: 5s
      timeout: 5s
      retries: 10
#====================================================
# VOLUMES
#====================================================
volumes:
  mongodb-data: